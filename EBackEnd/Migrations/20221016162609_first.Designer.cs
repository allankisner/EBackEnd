// <auto-generated />
using System;
using EBackEnd.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EBackEnd.Migrations
{
    [DbContext(typeof(EwaveDbContext))]
    [Migration("20221016162609_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EBackEnd.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClientId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"), 1L, 1);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cidade");

                    b.Property<string>("nmCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NmCliente");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("EBackEnd.Models.Produto", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProduto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduto"), 1L, 1);

                    b.Property<string>("DscProduto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("dscProduto");

                    b.Property<int>("VlrUnitario")
                        .HasColumnType("int")
                        .HasColumnName("vlrUnitario");

                    b.HasKey("IdProduto");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("EBackEnd.Models.Venda", b =>
                {
                    b.Property<int>("IdVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idVenda");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenda"), 1L, 1);

                    b.Property<DateTime>("dthVenda")
                        .HasColumnType("datetime2")
                        .HasColumnName("dthVenda");

                    b.Property<int>("idCliente")
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    b.Property<int>("idProduto")
                        .HasColumnType("int")
                        .HasColumnName("idProduto");

                    b.Property<int>("qtdVenda")
                        .HasColumnType("int")
                        .HasColumnName("qtdVenda");

                    b.Property<float>("vlrTotalVenda")
                        .HasColumnType("real")
                        .HasColumnName("vlrTotalVenda");

                    b.Property<int>("vlrUnitarioVenda")
                        .HasColumnType("int")
                        .HasColumnName("vlrUnitarioVenda");

                    b.HasKey("IdVenda");

                    b.HasIndex("idCliente");

                    b.HasIndex("idProduto");

                    b.ToTable("Venda");
                });

            modelBuilder.Entity("EBackEnd.Models.Venda", b =>
                {
                    b.HasOne("EBackEnd.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("idCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EBackEnd.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("idProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Produto");
                });
#pragma warning restore 612, 618
        }
    }
}
